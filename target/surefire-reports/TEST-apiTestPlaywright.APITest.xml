<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="1" failures="1" name="apiTestPlaywright.APITest" time="0.013" errors="0" skipped="0">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="java.vm.version" value="17.0.11+9-Debian-1deb12u1"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-17-openjdk-amd64/lib"/>
    <property name="maven.multiModuleProjectDirectory" value="/home/siebrasse/eclipse-workspace/apiTestPlaywright"/>
    <property name="java.vm.vendor" value="Debian"/>
    <property name="java.vendor.url" value="https://tracker.debian.org/openjdk-17"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="path.separator" value=":"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/home/siebrasse/eclipse-workspace/apiTestPlaywright"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="java.runtime.version" value="17.0.11+9-Debian-1deb12u1"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/usr/share/maven/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="maven.conf" value="/usr/share/maven/conf"/>
    <property name="jdk.debug" value="release"/>
    <property name="java.class.version" value="61.0"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="6.1.0-20-amd64"/>
    <property name="library.jansi.path" value="/usr/share/maven/lib/jansi-native"/>
    <property name="user.home" value="/home/siebrasse"/>
    <property name="user.timezone" value="Europe/Amsterdam"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="17"/>
    <property name="user.name" value="siebrasse"/>
    <property name="java.class.path" value="/usr/share/maven/boot/plexus-classworlds-2.x.jar"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher test"/>
    <property name="java.home" value="/usr/lib/jvm/java-17-openjdk-amd64"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.version" value="17.0.11"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.vendor" value="Debian"/>
    <property name="sun.stderr.encoding" value="UTF-8"/>
    <property name="maven.home" value="/usr/share/maven"/>
    <property name="file.separator" value="/"/>
    <property name="java.version.date" value="2024-04-16"/>
    <property name="java.vendor.url.bug" value="https://bugs.debian.org/openjdk-17"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.stdout.encoding" value="UTF-8"/>
  </properties>
  <testcase classname="apiTestPlaywright.APITest" name="testAPISogetiLeasingSolutions" time="0.013">
    <failure message="Error {
  message=&apos;connect EHOSTUNREACH 172.24.218.143:8080
  name=&apos;Error
  stack=&apos;Error: connect EHOSTUNREACH 172.24.218.143:8080
    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1595:16)
}
Call log:
- → GET http://172.24.218.143:8080/
-   user-agent: Playwright/1.42.1 (x64; debian 12) java/17
-   accept: */*
-   accept-encoding: gzip,deflate,br
-   Content-Type: application/json
" type="com.microsoft.playwright.PlaywrightException">com.microsoft.playwright.PlaywrightException: Error {
  message=&apos;connect EHOSTUNREACH 172.24.218.143:8080
  name=&apos;Error
  stack=&apos;Error: connect EHOSTUNREACH 172.24.218.143:8080
    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1595:16)
}
Call log:
- → GET http://172.24.218.143:8080/
-   user-agent: Playwright/1.42.1 (x64; debian 12) java/17
-   accept: */*
-   accept-encoding: gzip,deflate,br
-   Content-Type: application/json
	at com.microsoft.playwright.impl.WaitableResult.get(WaitableResult.java:54)
	at com.microsoft.playwright.impl.ChannelOwner.runUntil(ChannelOwner.java:120)
	at com.microsoft.playwright.impl.Connection.sendMessage(Connection.java:130)
	at com.microsoft.playwright.impl.ChannelOwner.sendMessage(ChannelOwner.java:106)
	at com.microsoft.playwright.impl.APIRequestContextImpl.fetchImpl(APIRequestContextImpl.java:138)
	at com.microsoft.playwright.impl.APIRequestContextImpl.lambda$fetch$1(APIRequestContextImpl.java:59)
	at com.microsoft.playwright.impl.LoggingSupport.withLogging(LoggingSupport.java:47)
	at com.microsoft.playwright.impl.ChannelOwner.withLogging(ChannelOwner.java:89)
	at com.microsoft.playwright.impl.APIRequestContextImpl.fetch(APIRequestContextImpl.java:59)
	at com.microsoft.playwright.impl.APIRequestContextImpl.get(APIRequestContextImpl.java:179)
	at com.microsoft.playwright.APIRequestContext.get(APIRequestContext.java:249)
	at apiTestPlaywright.APITest.testAPISogetiLeasingSolutions(APITest.java:40)
Caused by: com.microsoft.playwright.impl.DriverException: Error {
  message=&apos;connect EHOSTUNREACH 172.24.218.143:8080
  name=&apos;Error
  stack=&apos;Error: connect EHOSTUNREACH 172.24.218.143:8080
    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1595:16)
}
Call log:
- → GET http://172.24.218.143:8080/
-   user-agent: Playwright/1.42.1 (x64; debian 12) java/17
-   accept: */*
-   accept-encoding: gzip,deflate,br
-   Content-Type: application/json
	at com.microsoft.playwright.impl.Connection.dispatch(Connection.java:259)
	at com.microsoft.playwright.impl.Connection.processOneMessage(Connection.java:211)
	at com.microsoft.playwright.impl.ChannelOwner.runUntil(ChannelOwner.java:118)
	... 47 more
</failure>
    <system-out>Configuring TestNG with: org.apache.maven.surefire.testng.conf.TestNG652Configurator@424c0bc4
</system-out>
    <system-err>SLF4J: Failed to load class &quot;org.slf4j.impl.StaticLoggerBinder&quot;.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
</system-err>
  </testcase>
</testsuite>